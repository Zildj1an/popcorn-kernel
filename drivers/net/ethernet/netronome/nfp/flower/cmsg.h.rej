--- drivers/net/ethernet/netronome/nfp/flower/cmsg.h
+++ drivers/net/ethernet/netronome/nfp/flower/cmsg.h
@@ -8,7 +8,6 @@
 #include <linux/skbuff.h>
 #include <linux/types.h>
 #include <net/geneve.h>
-#include <net/vxlan.h>
 
 #include "../nfp_app.h"
 #include "../nfpcore/nfp_cpp.h"
@@ -476,32 +475,6 @@ static inline int nfp_flower_cmsg_get_data_len(struct sk_buff *skb)
 	return skb->len - NFP_FLOWER_CMSG_HLEN;
 }
 
-static inline bool
-nfp_fl_netdev_is_tunnel_type(struct net_device *netdev,
-			     enum nfp_flower_tun_type tun_type)
-{
-	if (netif_is_vxlan(netdev))
-		return tun_type == NFP_FL_TUNNEL_VXLAN;
-	if (netif_is_geneve(netdev))
-		return tun_type == NFP_FL_TUNNEL_GENEVE;
-
-	return false;
-}
-
-static inline bool nfp_fl_is_netdev_to_offload(struct net_device *netdev)
-{
-	if (!netdev->rtnl_link_ops)
-		return false;
-	if (!strcmp(netdev->rtnl_link_ops->kind, "openvswitch"))
-		return true;
-	if (netif_is_vxlan(netdev))
-		return true;
-	if (netif_is_geneve(netdev))
-		return true;
-
-	return false;
-}
-
 struct sk_buff *
 nfp_flower_cmsg_mac_repr_start(struct nfp_app *app, unsigned int num_ports);
 void
